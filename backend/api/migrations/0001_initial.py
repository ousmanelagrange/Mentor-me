# Generated by Django 4.2.13 on 2024-06-20 14:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_mentor', models.BooleanField(default=False)),
                ('is_mentee', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Disponibilite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DomaineExpertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Mentee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centres_interet', models.ManyToManyField(related_name='centres_interet_mentees', to='api.domaineexpertise')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disponibilite', models.ManyToManyField(to='api.disponibilite')),
                ('domaines_expertise', models.ManyToManyField(to='api.domaineexpertise')),
                ('experiences', models.ManyToManyField(to='api.experience')),
                ('langues', models.ManyToManyField(to='api.langue')),
            ],
        ),
        migrations.CreateModel(
            name='NiveauEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('commentaire', models.CharField(max_length=255)),
                ('disponibilite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.disponibilite')),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentee')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentor')),
            ],
        ),
        migrations.CreateModel(
            name='Ressource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('domaine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='api.domaineexpertise')),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='api.mentee')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to='api.mentor')),
            ],
        ),
        migrations.AddField(
            model_name='mentor',
            name='preferences',
            field=models.ManyToManyField(to='api.preference'),
        ),
        migrations.AddField(
            model_name='mentor',
            name='qualifications',
            field=models.ManyToManyField(to='api.qualification'),
        ),
        migrations.AddField(
            model_name='mentor',
            name='utilisateur',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mentee',
            name='competences_actuelles',
            field=models.ManyToManyField(to='api.qualification'),
        ),
        migrations.AddField(
            model_name='mentee',
            name='disponibilite',
            field=models.ManyToManyField(to='api.disponibilite'),
        ),
        migrations.AddField(
            model_name='mentee',
            name='langues',
            field=models.ManyToManyField(to='api.langue'),
        ),
        migrations.AddField(
            model_name='mentee',
            name='niveau_education',
            field=models.ManyToManyField(to='api.niveaueducation'),
        ),
        migrations.AddField(
            model_name='mentee',
            name='objectifs',
            field=models.ManyToManyField(related_name='objectifs_mentees', to='api.domaineexpertise'),
        ),
        migrations.AddField(
            model_name='mentee',
            name='utilisateur',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField()),
                ('commentaire', models.TextField()),
                ('date', models.DateField()),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentee')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentor')),
            ],
        ),
        migrations.CreateModel(
            name='Connexion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentee')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mentor')),
            ],
        ),
    ]
